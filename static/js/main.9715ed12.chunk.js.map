{"version":3,"sources":["contexts/ApplicationsContext/ApplicationsContext.js","components/NavBar/NavBar.js","components/Card/Card.js","components/Column/Column.js","components/Options/Options.js","components/History/History.js","components/Utils/Utils.js","components/LargeCard/LargeCard.js","components/AddApplication/AddApplication.js","routes/ApplicationsPage/ApplicationsPage.js","App.js","reportWebVitals.js","index.js"],"names":["ApplicationsContext","createContext","applications","error","setError","clearError","setApplications","addStatus","ApplicationsProvider","state","id","uuidv4","column","date","Date","company","job","site","console","setState","appId","statusId","status","parseInt","find","app","push","value","this","Provider","props","children","Component","NavBar","className","Card","application","length","format","to","Column","useContext","filter","map","idx","Options","options","selected","useParams","optionsComponents","option","name","onChange","e","target","handleChange","History","columns","col","colName","el","Overlay","icon","faTimes","LabelGroup","Input","classNames","join","Label","LargeCard","context","history","useHistory","colLength","href","rel","AddApplication","useState","touched","companySite","jobTitle","form","setForm","onSubmit","preventDefault","htmlFor","type","placeholder","ApplicationsPage","columnHeaders","columnComponents","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9715ed12.chunk.js","sourcesContent":["import React, { createContext, Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst ApplicationsContext = createContext({\n  applications: [],\n  error: null,\n  setError: () => {},\n  clearError: () => {},\n  setApplications: () => {},\n  addStatus: () => {},\n});\n\nexport default ApplicationsContext;\n\nexport class ApplicationsProvider extends Component {\n  state = {\n    error: null,\n    applications: [\n      {\n        id: uuidv4(),\n        column: [{ id: 0, date: new Date(2020, 4, 13) }],\n        company: \"Ultimate Software\",\n        job: \"Sotware Engineer 2\",\n        site: \"https://www.ultimatesoftware.com/\",\n      },\n      {\n        id: uuidv4(),\n        column: [\n          { id: 0, date: new Date(2020, 4, 14) },\n          { id: 4, date: new Date(2020, 4, 14) },\n        ],\n        company: \"Art & Logic\",\n        job: \"Full Stack Web Developer\",\n        site: \"https://artandlogic.com/\",\n      },\n      {\n        id: uuidv4(),\n        column: [{ id: 0, date: new Date(2020, 4, 14) }],\n        company: \"GitStart\",\n        job: \"Full Stack JavaScript Developer - Junior\",\n        site: \"https://www.gitstart.com/\",\n      },\n      {\n        id: uuidv4(),\n        column: [{ id: 0, date: new Date(2020, 4, 14) }],\n        company: \"CyberCoders\",\n        job: \"Web Developer\",\n        site: \"https://www.cybercoders.com/\",\n      },\n      {\n        id: uuidv4(),\n        column: [{ id: 0, date: new Date(2020, 4, 14) }],\n        company: \"Digital Media Solutions\",\n        job: \"Frontend Developer\",\n        site: \"https://digitalmediasolutions.com/\",\n      },\n      {\n        id: uuidv4(),\n        column: [{ id: 0, date: new Date(2020, 11, 1) }],\n        company: \"Fake\",\n        job: \"Fake\",\n        site: \"https://www.google.com\",\n      },\n    ],\n  };\n\n  setError = (error) => {\n    console.error(error);\n    this.setState({ error });\n  };\n\n  clearError = () => {\n    this.setState({ error: null });\n  };\n\n  setApplications = (applications) => {\n    this.setState({ applications });\n  };\n\n  addStatus = (appId, statusId) => {\n    const { applications } = this.state;\n    statusId = parseInt(statusId);\n    const status = {\n      id: statusId,\n      date: new Date(),\n    };\n    const column = applications.find((app) => app.id === appId).column;\n    column.push(status);\n    this.setState({\n      applications: [...this.state.applications],\n    });\n  };\n\n  render() {\n    const value = {\n      applications: this.state.applications,\n      error: this.state.error,\n      setError: this.setError,\n      clearError: this.clearError,\n      setApplications: this.setApplications,\n      addStatus: this.addStatus,\n    };\n    return (\n      <ApplicationsContext.Provider value={value}>\n        {this.props.children}\n      </ApplicationsContext.Provider>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./NavBar.css\";\n\nexport default function NavBar(props) {\n  return (\n    <div className=\"NavBar\">\n      <div className=\"container\">Job Tracker</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport \"./Card.css\";\n\nexport default function Card(props) {\n  const { id, company, job, column } = props.application;\n  const colLength = column.length;\n  let date = column[colLength - 1].date;\n  date = format(date, \"MMM d, yyyy\");\n  return (\n    <Link className=\"Card\" to={`/application/${id}`}>\n      <div>\n        <div className=\"company\">{company}</div>\n        <div className=\"job\">{job}</div>\n        <div className=\"date\">{date}</div>\n      </div>\n    </Link>\n  );\n}\n","import React, { useContext } from \"react\";\nimport Card from \"../Card/Card\";\nimport ApplicationsContext from \"../../contexts/ApplicationsContext/ApplicationsContext\";\nimport \"./Column.css\";\n\nexport default function Column(props) {\n  const { id } = props;\n  const context = useContext(ApplicationsContext);\n  let { applications } = context;\n  if (applications) {\n    applications = applications.filter(\n      (application) =>\n        application.column[application.column.length - 1].id === id\n    );\n  }\n  if (applications) {\n    applications = applications.map((application, idx) => (\n      <Card application={application} key={idx} />\n    ));\n  }\n  return (\n    <div className=\"Column\">\n      <div className=\"card-container\">{applications}</div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ApplicationsContext from \"../../contexts/ApplicationsContext/ApplicationsContext\";\nimport \"./Options.css\";\n\nexport default function Options(props) {\n  const context = useContext(ApplicationsContext);\n  const { addStatus } = context;\n  const { options, selected } = props;\n  const { appId } = useParams();\n\n  function handleChange(appId, e) {\n    const { value } = e.target;\n    addStatus(appId, value);\n  }\n\n  const optionsComponents = options.map((option, idx) => {\n    return (\n      <option value={option.id} key={idx}>\n        {option.name}\n      </option>\n    );\n  });\n  return (\n    <select\n      className=\"Options\"\n      value={selected}\n      onChange={(e) => handleChange(appId, e)}\n    >\n      {optionsComponents}\n    </select>\n  );\n}\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport \"./History.css\";\n\nexport default function History(props) {\n  let { column, columns } = props;\n  column = column.map((col, idx) => {\n    let colName = columns.find((el) => el.id === col.id);\n    colName = colName.name;\n    return (\n      <li key={idx}>\n        <div className=\"name\">{colName}</div>\n        <div className=\"date\">{format(col.date, \"MMM dd\")}</div>\n      </li>\n    );\n  });\n  return (\n    <div className=\"History\">\n      <ul>{column}</ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/pro-light-svg-icons\";\nimport \"./Utils.css\";\n\nexport function Overlay(props) {\n  return (\n    <div className={`Overlay ${props.className}`}>\n      <div className=\"container\">\n        <Link to=\"/\" className=\"close\">\n          <FontAwesomeIcon icon={faTimes} />\n        </Link>\n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nexport function LabelGroup(props) {\n  return (\n    <div className={`LabelGroup ${props.className}`}>{props.children}</div>\n  );\n}\n\nexport function Input({ error, className, ...props }) {\n  const classNames = !!error\n    ? [\"Input\", \"Input--error\", className]\n    : [\"Input\", className];\n  return <input className={classNames.join(\" \")} {...props} />;\n}\n\nexport function Label({ className, ...props }) {\n  return <label className={[\"Label\", className].join(\" \")} {...props} />;\n}\n","import React, { useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Options from \"../Options/Options\";\nimport History from \"../History/History\";\nimport { Overlay } from \"../Utils/Utils\";\nimport ApplicationsContext from \"../../contexts/ApplicationsContext/ApplicationsContext\";\nimport \"./LargeCard.css\";\n\nexport default function LargeCard(props) {\n  const context = useContext(ApplicationsContext);\n  const history = useHistory();\n  const { applications } = context;\n  const { appId } = useParams();\n  const { columns } = props;\n\n  let application;\n  application = applications.find((app) => app.id === appId);\n  if (!!application) {\n    const { column, job, company, site } = application;\n    const colLength = column.length;\n    return (\n      <Overlay className=\"LargeCard\">\n        <header>\n          <h2>\n            <a href={site} rel=\"noreferrer\" target=\"_blank\">\n              {company}\n            </a>\n          </h2>\n          <div className=\"job\">{job}</div>\n        </header>\n        <div className=\"content\">\n          <Options options={columns} selected={column[colLength - 1].id} />\n          <History column={column} columns={columns} />\n        </div>\n      </Overlay>\n    );\n  } else {\n    history.push(\"/\");\n    return null;\n  }\n}\n","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Overlay, LabelGroup, Input, Label } from \"../Utils/Utils\";\nimport ApplicationsContext from \"../../contexts/ApplicationsContext/ApplicationsContext\";\nimport \"./AddApplication.css\";\n\nexport default function AddApplication(props) {\n  const history = useHistory();\n  const context = useContext(ApplicationsContext);\n  const [form, setForm] = useState({\n    company: {\n      value: \"\",\n      touched: false,\n    },\n    companySite: {\n      value: \"\",\n      touched: false,\n    },\n    jobTitle: {\n      value: \"\",\n      touched: false,\n    },\n  });\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setForm({\n      ...form,\n      [name]: { value, touched: true },\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const app = {\n      id: uuidv4(),\n      column: [{ id: 0, date: new Date() }],\n      company: form.company.value,\n      job: form.jobTitle.value,\n      site: form.companySite.value,\n    };\n    const { applications, setApplications } = context;\n    setApplications([...applications, app]);\n    setForm({\n      company: {\n        value: \"\",\n        touched: false,\n      },\n      companySite: {\n        value: \"\",\n        touched: false,\n      },\n      jobTitle: {\n        value: \"\",\n        touched: false,\n      },\n    });\n    history.push(\"/\");\n  }\n\n  return (\n    <Overlay className=\"AddApplication\">\n      <form onSubmit={handleSubmit}>\n        <LabelGroup>\n          <Label htmlFor=\"company\">Company</Label>\n          <Input\n            type=\"text\"\n            id=\"company\"\n            name=\"company\"\n            placeholder=\"ex: Mindera\"\n            value={form.company.value}\n            onChange={(e) => handleChange(e)}\n          />\n        </LabelGroup>\n        <LabelGroup>\n          <Label htmlFor=\"companySite\">Company Site</Label>\n          <Input\n            type=\"url\"\n            id=\"companySite\"\n            name=\"companySite\"\n            value={form.companySite.value}\n            onChange={(e) => handleChange(e)}\n          />\n        </LabelGroup>\n        <LabelGroup>\n          <Label htmlFor=\"jobTitle\">Job Title</Label>\n          <Input\n            type=\"text\"\n            id=\"jobTitle\"\n            name=\"jobTitle\"\n            value={form.jobTitle.value}\n            onChange={(e) => handleChange(e)}\n          />\n        </LabelGroup>\n        <button type=\"submit\">Save</button>\n      </form>\n    </Overlay>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport Column from \"../../components/Column/Column\";\nimport LargeCard from \"../../components/LargeCard/LargeCard\";\nimport AddApplication from \"../../components/AddApplication/AddApplication\";\nimport \"./ApplicationsPage.css\";\n\nexport default function ApplicationsPage(props) {\n  // eslint-disable-next-line no-unused-vars\n  const [columns, setColumns] = useState([\n    { id: 0, name: \"Applied\" },\n    { id: 1, name: \"Intro Interview\" },\n    { id: 2, name: \"Recruiter Call\" },\n    { id: 3, name: \"Sent Follow-up\" },\n    { id: 4, name: \"Coding Challenge\" },\n    { id: 5, name: \"Sent Follow-up\" },\n    { id: 6, name: \"Technical Interview\" },\n    { id: 7, name: \"Sent Follow-up\" },\n    { id: 8, name: \"Onsite Interview\" },\n    { id: 9, name: \"Offer Letter Date\" },\n  ]);\n  const columnHeaders = columns.map((col, idx) => (\n    <div key={idx}>{col.name}</div>\n  ));\n  const columnComponents = columns.map((col) => (\n    <Column key={col.id} id={col.id} />\n  ));\n  return (\n    <div className=\"ApplicationsPage\">\n      <div className=\"top\">\n        <Link to=\"/add-application\">Add</Link>\n      </div>\n      <div className=\"column-headers\">{columnHeaders}</div>\n      <div className=\"columns\">{columnComponents}</div>\n      <Route path=\"/application/:appId\">\n        <LargeCard columns={columns} />\n      </Route>\n      <Route path=\"/add-application\">\n        <AddApplication />\n      </Route>\n    </div>\n  );\n}\n","import React from \"react\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport ApplicationsPage from \"./routes/ApplicationsPage/ApplicationsPage\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <ApplicationsPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals; \n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ApplicationsProvider } from \"./contexts/ApplicationsContext/ApplicationsContext\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ApplicationsProvider>\n        <App />\n      </ApplicationsProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\") \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}