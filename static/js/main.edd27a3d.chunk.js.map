{"version":3,"sources":["contexts/ApplicationsContext/ApplicationsContext.js","components/NavBar/NavBar.js","components/Card/Card.js","components/Column/Column.js","components/Options/Options.js","components/History/History.js","components/Utils/Utils.js","components/LargeCard/LargeCard.js","components/AddApplication/AddApplication.js","routes/ApplicationsPage/ApplicationsPage.js","App.js","reportWebVitals.js","index.js"],"names":["ApplicationsContext","createContext","applications","error","setError","clearError","setApplications","addStatus","deleteApplication","ApplicationsProvider","state","id","uuidv4","column","date","Date","company","job","site","console","setState","appId","statusId","status","parseInt","find","app","push","getApplicationIdx","findIndex","filter","value","this","Provider","props","children","Component","NavBar","className","Card","application","length","format","to","Column","useContext","map","idx","Options","options","selected","useParams","optionsComponents","option","name","onChange","e","target","handleChange","History","columns","col","colName","el","Overlay","icon","faArrowLeft","ellipsis","type","onClick","ellipsisClick","faEllipsisV","LabelGroup","Input","classNames","join","Label","defaultProps","ellipsesClick","LargeCard","context","history","useHistory","useState","showMenu","setShowMenu","colLength","preventDefault","href","rel","AddApplication","touched","companySite","jobTitle","form","setForm","onSubmit","htmlFor","placeholder","ApplicationsPage","columnHeaders","columnComponents","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edd27a3d.chunk.js","sourcesContent":["import React, { createContext, Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst ApplicationsContext = createContext({\r\n  applications: [],\r\n  error: null,\r\n  setError: () => {},\r\n  clearError: () => {},\r\n  setApplications: () => {},\r\n  addStatus: () => {},\r\n  deleteApplication: () => {},\r\n});\r\n\r\nexport default ApplicationsContext;\r\n\r\nexport class ApplicationsProvider extends Component {\r\n  state = {\r\n    error: null,\r\n    applications: [\r\n      {\r\n        id: uuidv4(),\r\n        column: [{ id: 0, date: new Date(2020, 4, 13) }],\r\n        company: \"Ultimate Software\",\r\n        job: \"Sotware Engineer 2\",\r\n        site: \"https://www.ultimatesoftware.com/\",\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        column: [\r\n          { id: 0, date: new Date(2020, 4, 14) },\r\n          { id: 4, date: new Date(2020, 4, 14) },\r\n        ],\r\n        company: \"Art & Logic\",\r\n        job: \"Full Stack Web Developer\",\r\n        site: \"https://artandlogic.com/\",\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        column: [{ id: 0, date: new Date(2020, 4, 14) }],\r\n        company: \"GitStart\",\r\n        job: \"Full Stack JavaScript Developer - Junior\",\r\n        site: \"https://www.gitstart.com/\",\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        column: [{ id: 0, date: new Date(2020, 4, 14) }],\r\n        company: \"CyberCoders\",\r\n        job: \"Web Developer\",\r\n        site: \"https://www.cybercoders.com/\",\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        column: [{ id: 0, date: new Date(2020, 4, 14) }],\r\n        company: \"Digital Media Solutions\",\r\n        job: \"Frontend Developer\",\r\n        site: \"https://digitalmediasolutions.com/\",\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        column: [{ id: 0, date: new Date(2020, 11, 1) }],\r\n        company: \"Fake\",\r\n        job: \"Fake\",\r\n        site: \"https://www.google.com\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  setError = (error) => {\r\n    console.error(error);\r\n    this.setState({ error });\r\n  };\r\n\r\n  clearError = () => {\r\n    this.setState({ error: null });\r\n  };\r\n\r\n  setApplications = (applications) => {\r\n    this.setState({ applications });\r\n  };\r\n\r\n  addStatus = (appId, statusId) => {\r\n    const { applications } = this.state;\r\n    statusId = parseInt(statusId);\r\n    const status = {\r\n      id: statusId,\r\n      date: new Date(),\r\n    };\r\n    const column = applications.find((app) => app.id === appId).column;\r\n    column.push(status);\r\n    this.setState({\r\n      applications: [...this.state.applications],\r\n    });\r\n  };\r\n\r\n  getApplicationIdx = (id) => {\r\n    const { applications } = this.state;\r\n    return applications.findIndex((app) => app.id === id);\r\n  };\r\n\r\n  deleteApplication = (id) => {\r\n    let { applications } = this.state;\r\n    applications = applications.filter((app) => app.id !== id);\r\n    this.setState({ applications: [...applications] });\r\n  };\r\n\r\n  render() {\r\n    const value = {\r\n      applications: this.state.applications,\r\n      error: this.state.error,\r\n      setError: this.setError,\r\n      clearError: this.clearError,\r\n      setApplications: this.setApplications,\r\n      addStatus: this.addStatus,\r\n      deleteApplication: this.deleteApplication,\r\n    };\r\n    return (\r\n      <ApplicationsContext.Provider value={value}>\r\n        {this.props.children}\r\n      </ApplicationsContext.Provider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./NavBar.css\";\n\nexport default function NavBar(props) {\n  return (\n    <div className=\"NavBar\">\n      <div className=\"container\">Job Tracker</div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport \"./Card.css\";\n\nexport default function Card(props) {\n  const { id, company, job, column } = props.application;\n  const colLength = column.length;\n  let date = column[colLength - 1].date;\n  date = format(date, \"MMM d, yyyy\");\n  return (\n    <Link className=\"Card\" to={`/application/${id}`}>\n      <div>\n        <div className=\"company\">{company}</div>\n        <div className=\"job\">{job}</div>\n        <div className=\"date\">{date}</div>\n      </div>\n    </Link>\n  );\n}\n","import React, { useContext } from \"react\";\nimport Card from \"../Card/Card\";\nimport ApplicationsContext from \"../../contexts/ApplicationsContext/ApplicationsContext\";\nimport \"./Column.css\";\n\nexport default function Column(props) {\n  const { id } = props;\n  const context = useContext(ApplicationsContext);\n  let { applications } = context;\n  if (applications) {\n    applications = applications.filter(\n      (application) =>\n        application.column[application.column.length - 1].id === id\n    );\n  }\n  if (applications) {\n    applications = applications.map((application, idx) => (\n      <Card application={application} key={idx} />\n    ));\n  }\n  return (\n    <div className=\"Column\">\n      <div className=\"card-container\">{applications}</div>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ApplicationsContext from \"../../contexts/ApplicationsContext/ApplicationsContext\";\nimport \"./Options.css\";\n\nexport default function Options(props) {\n  const context = useContext(ApplicationsContext);\n  const { addStatus } = context;\n  const { options, selected } = props;\n  const { appId } = useParams();\n\n  function handleChange(appId, e) {\n    const { value } = e.target;\n    addStatus(appId, value);\n  }\n\n  const optionsComponents = options.map((option, idx) => {\n    return (\n      <option value={option.id} key={idx}>\n        {option.name}\n      </option>\n    );\n  });\n  return (\n    <select\n      className=\"Options\"\n      value={selected}\n      onChange={(e) => handleChange(appId, e)}\n    >\n      {optionsComponents}\n    </select>\n  );\n}\n","import React from \"react\";\nimport { format } from \"date-fns\";\nimport \"./History.css\";\n\nexport default function History(props) {\n  let { column, columns } = props;\n  column = column.map((col, idx) => {\n    let colName = columns.find((el) => el.id === col.id);\n    colName = colName.name;\n    return (\n      <li key={idx}>\n        <div className=\"name\">{colName}</div>\n        <div className=\"date\">{format(col.date, \"MMM dd\")}</div>\n      </li>\n    );\n  });\n  return (\n    <div className=\"History\">\n      <ul>{column}</ul>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft, faEllipsisV } from \"@fortawesome/pro-light-svg-icons\";\r\nimport \"./Utils.css\";\r\n\r\nexport function Overlay(props) {\r\n  return (\r\n    <div className={`Overlay ${props.className}`}>\r\n      <div className=\"container\">\r\n        <div className=\"icons\">\r\n          <Link to=\"/\" className=\"close\">\r\n            <FontAwesomeIcon icon={faArrowLeft} />\r\n          </Link>\r\n          {props.ellipsis && (\r\n            <button\r\n              type=\"button\"\r\n              className=\"ellipsis-button\"\r\n              onClick={(e) => props.ellipsisClick(e)}\r\n            >\r\n              <FontAwesomeIcon icon={faEllipsisV} />\r\n            </button>\r\n          )}\r\n        </div>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nOverlay.defaultProps = {\r\n  ellipsesClick: () => {},\r\n};\r\n\r\nexport function LabelGroup(props) {\r\n  return (\r\n    <div className={`LabelGroup ${props.className}`}>{props.children}</div>\r\n  );\r\n}\r\n\r\nexport function Input({ error, className, ...props }) {\r\n  const classNames = !!error\r\n    ? [\"Input\", \"Input--error\", className]\r\n    : [\"Input\", className];\r\n  return <input className={classNames.join(\" \")} {...props} />;\r\n}\r\n\r\nexport function Label({ className, ...props }) {\r\n  return <label className={[\"Label\", className].join(\" \")} {...props} />;\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Options from \"../Options/Options\";\r\nimport History from \"../History/History\";\r\nimport { Overlay } from \"../Utils/Utils\";\r\nimport ApplicationsContext from \"../../contexts/ApplicationsContext/ApplicationsContext\";\r\nimport \"./LargeCard.css\";\r\n\r\nexport default function LargeCard(props) {\r\n  const context = useContext(ApplicationsContext);\r\n  const history = useHistory();\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const { applications } = context;\r\n  const { appId } = useParams();\r\n  const { columns } = props;\r\n\r\n  function handleEllipsisClick(e) {\r\n    e.preventDefault();\r\n    setShowMenu(true);\r\n  }\r\n\r\n  function handleDeleteApplication() {\r\n    const { deleteApplication } = context;\r\n    history.push(\"/\");\r\n    deleteApplication(appId);\r\n  }\r\n\r\n  let application;\r\n  application = applications.find((app) => app.id === appId);\r\n  if (!!application) {\r\n    const { column, job, company, site } = application;\r\n    const colLength = column.length;\r\n    return (\r\n      <Overlay\r\n        className=\"LargeCard\"\r\n        ellipsis={true}\r\n        ellipsisClick={handleEllipsisClick}\r\n      >\r\n        {showMenu && (\r\n          <div className=\"ellipsis-menu\">\r\n            <button type=\"button\" onClick={handleDeleteApplication}>\r\n              Delete\r\n            </button>\r\n          </div>\r\n        )}\r\n        <header onClick={(e) => setShowMenu(false)}>\r\n          <h2>\r\n            <a href={site} rel=\"noreferrer\" target=\"_blank\">\r\n              {company}\r\n            </a>\r\n          </h2>\r\n          <div className=\"job\">{job}</div>\r\n        </header>\r\n        <div className=\"content\" onClick={(e) => setShowMenu(false)}>\r\n          <Options options={columns} selected={column[colLength - 1].id} />\r\n          <History column={column} columns={columns} />\r\n        </div>\r\n      </Overlay>\r\n    );\r\n  } else {\r\n    history.push(\"/\");\r\n    return null;\r\n  }\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Overlay, LabelGroup, Input, Label } from \"../Utils/Utils\";\r\nimport ApplicationsContext from \"../../contexts/ApplicationsContext/ApplicationsContext\";\r\nimport \"./AddApplication.css\";\r\n\r\nexport default function AddApplication(props) {\r\n  const history = useHistory();\r\n  const context = useContext(ApplicationsContext);\r\n  const [form, setForm] = useState({\r\n    company: {\r\n      value: \"\",\r\n      touched: false,\r\n    },\r\n    companySite: {\r\n      value: \"\",\r\n      touched: false,\r\n    },\r\n    jobTitle: {\r\n      value: \"\",\r\n      touched: false,\r\n    },\r\n  });\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setForm({\r\n      ...form,\r\n      [name]: { value, touched: true },\r\n    });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const app = {\r\n      id: uuidv4(),\r\n      column: [{ id: 0, date: new Date() }],\r\n      company: form.company.value,\r\n      job: form.jobTitle.value,\r\n      site: form.companySite.value,\r\n    };\r\n    const { applications, setApplications } = context;\r\n    setApplications([...applications, app]);\r\n    setForm({\r\n      company: {\r\n        value: \"\",\r\n        touched: false,\r\n      },\r\n      companySite: {\r\n        value: \"\",\r\n        touched: false,\r\n      },\r\n      jobTitle: {\r\n        value: \"\",\r\n        touched: false,\r\n      },\r\n    });\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <Overlay className=\"AddApplication\">\r\n      <form onSubmit={handleSubmit}>\r\n        <LabelGroup>\r\n          <Label htmlFor=\"company\">Company</Label>\r\n          <Input\r\n            type=\"text\"\r\n            id=\"company\"\r\n            name=\"company\"\r\n            placeholder=\"ex: Mindera\"\r\n            value={form.company.value}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n        </LabelGroup>\r\n        <LabelGroup>\r\n          <Label htmlFor=\"companySite\">Company Site</Label>\r\n          <Input\r\n            type=\"url\"\r\n            id=\"companySite\"\r\n            name=\"companySite\"\r\n            value={form.companySite.value}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n        </LabelGroup>\r\n        <LabelGroup>\r\n          <Label htmlFor=\"jobTitle\">Job Title</Label>\r\n          <Input\r\n            type=\"text\"\r\n            id=\"jobTitle\"\r\n            name=\"jobTitle\"\r\n            value={form.jobTitle.value}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n        </LabelGroup>\r\n        <button type=\"submit\">Save</button>\r\n      </form>\r\n    </Overlay>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport Column from \"../../components/Column/Column\";\r\nimport LargeCard from \"../../components/LargeCard/LargeCard\";\r\nimport AddApplication from \"../../components/AddApplication/AddApplication\";\r\nimport \"./ApplicationsPage.css\";\r\n\r\nexport default function ApplicationsPage(props) {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [columns, setColumns] = useState([\r\n    { id: 0, name: \"Applied\" },\r\n    { id: 1, name: \"Intro Interview\" },\r\n    { id: 2, name: \"Recruiter Call\" },\r\n    { id: 3, name: \"Sent Follow-up\" },\r\n    { id: 4, name: \"Coding Challenge\" },\r\n    { id: 5, name: \"Sent Follow-up\" },\r\n    { id: 6, name: \"Technical Interview\" },\r\n    { id: 7, name: \"Sent Follow-up\" },\r\n    { id: 8, name: \"Onsite Interview\" },\r\n    { id: 9, name: \"Offer Letter Date\" },\r\n  ]);\r\n  const columnHeaders = columns.map((col, idx) => (\r\n    <div key={idx}>{col.name}</div>\r\n  ));\r\n  const columnComponents = columns.map((col) => (\r\n    <Column key={col.id} id={col.id} />\r\n  ));\r\n  return (\r\n    <div className=\"ApplicationsPage\">\r\n      <div className=\"top\">\r\n        <Link to=\"/add-application\" className=\"add-app\">\r\n          Add\r\n        </Link>\r\n      </div>\r\n      <div className=\"column-headers\">{columnHeaders}</div>\r\n      <div className=\"columns\">{columnComponents}</div>\r\n      <Route path=\"/application/:appId\">\r\n        <LargeCard columns={columns} />\r\n      </Route>\r\n      <Route path=\"/add-application\">\r\n        <AddApplication />\r\n      </Route>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport ApplicationsPage from \"./routes/ApplicationsPage/ApplicationsPage\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <ApplicationsPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals; \r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { ApplicationsProvider } from \"./contexts/ApplicationsContext/ApplicationsContext\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <ApplicationsProvider>\r\n        <App />\r\n      </ApplicationsProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\") \r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}